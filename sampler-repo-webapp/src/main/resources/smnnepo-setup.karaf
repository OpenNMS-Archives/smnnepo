USER=$1
PASSWD=$2
ONMS=($3 replaceAll "/*$" "")
if { $5 } {
	BROKER=$4;
	LOCATION=$5;
} {
	# If there is no explicit broker argument, assume that it is the same address as the REST root
	BROKER=(($3 replaceAll "https?://" "tcp://") replaceAll "(//[^:]*):\d+.*$" "\$1:61616");
	LOCATION=$4;
}
BROKERNAME=($LOCATION replaceAll "[^A-z0-9]" "-")

echo "OpenNMS REST Root:   $ONMS"
echo "OpenNMS Broker URI:  $BROKER"
echo "Monitoring Location: $LOCATION"
echo "Broker Name:         $BROKERNAME"

addcommand system (($.context bundle) loadClass java.lang.System)
KARAF_BASE=system:getproperty karaf.base

##########################################
# Set up the root instance               #
##########################################

# Add the SMNnepO WAR as a PAX Maven repository URL
config:edit org.ops4j.pax.url.mvn
config:propset org.ops4j.pax.url.mvn.repositories $ONMS/smnnepo@snapshots@id=opennms-repo
config:update

config:edit org.opennms.minion.bootstrap
config:propset dominionBrokerUri "$BROKER"
config:propset opennmsRestRoot "$ONMS"
config:update

# Add the required features URLs
features:addurl mvn:org.apache.activemq/activemq-karaf/5.10.0/xml/features
features:addurl mvn:org.opennms.netmgt.sample/karaf/16.0.0-SNAPSHOT/xml
features:addurl mvn:org.opennms.netmgt.sample/karaf/16.0.0-SNAPSHOT/xml/minion

FINDBOOTSTRAP = (features:list | grep minion-bootstrap | grep -v uninstalled | tac)
if { ($FINDBOOTSTRAP isEmpty) } {
	features:install minion-bootstrap
} {
	features:uninstall minion-bootstrap
	sleep 10000
	features:install minion-bootstrap
}
