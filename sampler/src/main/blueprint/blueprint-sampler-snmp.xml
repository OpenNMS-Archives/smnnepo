<blueprint
	xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

  <!-- Use OSGi to get service references to the SNMP metric configuration -->
  <reference id="snmpMetricRepository" interface="org.opennms.netmgt.api.sample.CollectionConfiguration"/>

  <!-- Use OSGi to get the SNMP configuration from the sampler-config-snmp bundle -->
  <reference id="snmpConfig" interface="org.opennms.netmgt.api.sample.support.SingletonBeanFactory" filter="(beanClass=org.opennms.netmgt.config.snmp.SnmpConfig)" />

  <!-- The collector that fetches the data from the agent -->
  <bean id="snmpCollector" class="org.opennms.netmgt.sampler.snmp.DefaultSnmpCollector" />

  <!-- Register a whiteboard of sample repositories where samples will be saved -->
  <bean id="sampleSetDispatcher" class="org.opennms.netmgt.api.sample.support.DispatcherWhiteboard">
    <argument value="seda:saveToRepository"/>

    <property name="context" ref="blueprintBundleContext"/>
    <property name="messageClass" value="org.opennms.netmgt.api.sample.SampleSet"/>
    <property name="serviceClass" value="org.opennms.netmgt.api.sample.SampleSetDispatcher"/>
    <property name="methodName" value="save"/>
  </bean>

  <!-- Camel EIP helper beans -->
  <bean id="snmpAgentProcessor" class="org.opennms.netmgt.sampler.snmp.SnmpAgentProcessor">
    <property name="snmpConfigFactory" ref="snmpConfig" />
  </bean>

  <!-- OSGi service that exposes this sampler as a scheduling target -->
  <bean id="snmpSampler" class="org.opennms.netmgt.api.sample.support.DefaultAgentDispatcher">
    <argument value="seda:collectAgent"/>
  </bean>

  <service ref="snmpSampler" interface="org.opennms.netmgt.api.sample.AgentDispatcher">
    <service-properties>
      <entry key="org.opennms.netmgt.sampler.scheduler.serviceName" value="SNMP"/>
    </service-properties>
  </service>

  <camelContext id="samplerSnmpCamelContext" xmlns="http://camel.apache.org/schema/blueprint">

    <!-- Add exception handlers -->
    <onException>
      <exception>java.io.IOException</exception>
      <handled><constant>true</constant></handled>
      <!-- .logStackTrace(true) -->
      <stop/>
    </onException>
    <!--
    <onException>
      <exception>org.opennms.netmgt.sampler.snmp.CollectionException</exception>
      <handled><constant>true</constant></handled>
    </onException>
    -->

    <route id="collectAgent">
      <from uri="seda:collectAgent"/>
      <!-- Convert the generic Agent into an SnmpAgent -->
      <bean ref="snmpAgentProcessor"/>
      <log loggingLevel="INFO" message="sampler-snmp blueprint.xml: Collecting agent ${body.id}" />
      <!-- create a request for data collection for the agent -->
      <bean ref="snmpMetricRepository" method="createRequestForAgent"/>
      <!-- collect the data for the agent -->
      <bean ref="snmpCollector" method="collect"/>
      <log loggingLevel="DEBUG" message="sampler-snmp blueprint.xml: ${body}"/>
      <!-- forward the data to the listening queue -->
      <to uri="seda:sampleSets"/>
    </route>

    <route id="sampleSet">
      <from uri="seda:sampleSets"/>
      <log loggingLevel="INFO" message="Received SampleSet with ${body.measurements.size} sample(s)"/>
      <!-- send it the persister -->
      <to uri="seda:saveToRepository"/>
      <!-- <to uri="seda:sampleSaved"/> -->
    </route>

  </camelContext>
</blueprint>
