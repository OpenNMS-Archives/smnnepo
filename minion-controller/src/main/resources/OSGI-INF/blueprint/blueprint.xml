<blueprint
	xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
	xmlns:cb="http://camel.apache.org/schema/blueprint"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

	<cm:property-placeholder persistent-id="org.opennms.minion.controller" update-strategy="reload">
		<cm:default-properties>
			<cm:property name="broker" value="vm://localhost" />
		</cm:default-properties>
	</cm:property-placeholder>

	<bean id="minionJaxb" class="org.opennms.minion.impl.DataFormatUtils" factory-method="getDataFormat" />

	<reference id="adminService" interface="org.apache.karaf.admin.AdminService" />
	<reference id="configAdmin"  interface="org.osgi.service.cm.ConfigurationAdmin" />
	
	<bean id="controller" class="org.opennms.minion.controller.internal.MinionControllerImpl" activation="lazy" destroy-method="stop">
		<argument value="direct:sendMinionMessage" />

		<property name="configurationAdmin" ref="configAdmin" />
		<property name="adminService" ref="adminService" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="${broker}" />
	</bean>

	<camelContext id="activemqMessageSenderCamelContext" xmlns="http://camel.apache.org/schema/blueprint">
		<route id="fireStartMinionController">
			<from uri="timer://runOnce?repeatCount=1&amp;delay=5000" />
			<log loggingLevel="INFO" message="Initializing MinionController" />
			<bean ref="controller" method="start" />
		</route>
	    	    
		<!-- Send Minion messages over ActiveMQ -->
		<route id="sendMinionMessage">
			<from uri="direct:sendMinionMessage" />
			<log loggingLevel="INFO" message="minion-controller: sendMinionMessage: ${body.toString()}" />
			<convertBodyTo type="org.opennms.minion.api.MinionStatusMessage" />
			<marshal ref="minionJaxb" />
			<to uri="activemq:initialization?disableReplyTo=true" />
		</route>
	</camelContext>

</blueprint>
